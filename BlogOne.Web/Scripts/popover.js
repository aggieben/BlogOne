// Generated by CoffeeScript 1.6.3
var Popover;

Popover = (function() {
  Popover._current = null;

  Popover._getId = function() {
    return ("0000" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).substr(-4);
  };

  Popover._removeTrigger = function(e) {
    var afn, pop, _ref;
    pop = Popover._current;
    if (pop != null) {
      if (pop.firstTime) {
        pop.firstTime = false;
        afn = document.querySelector('*[autofocus="true"]');
        if (pop.contains(afn)) {
          return afn.focus();
        }
      } else if ((_ref = e.which) !== 16 && _ref !== 17 && _ref !== 18 && _ref !== 91) {
        return pop.remove();
      }
    }
  };

  function Popover(opts) {
    var coords, div, _ref, _ref1, _this;
    this.firstTime = true;
    div = document.createElement('div');
    div.id = Popover._getId();
    div.setAttribute('class', 'bo-popover');
    div.style.visibility = 'hidden';
    div.innerHTML = (_ref = opts.content) != null ? _ref : '';
    document.body.appendChild(div);
    switch (opts.position) {
      case 'selection':
        coords = this._getSelectionCoords();
        console.log(coords);
        div.style.left = "" + coords.x + "px";
        div.style.top = "" + coords.y + "px";
        div.style.marginTop = "-" + (Math.floor(10 + div.clientHeight)) + "px";
        div.style.marginLeft = "-" + (Math.floor(div.clientWidth / 2)) + "px";
        div.style.visibility = 'visible';
    }
    this.div = div;
    if ((_ref1 = Popover._current) != null) {
      _ref1.remove();
    }
    Popover._current = this;
    _this = this;
    $(div).on('click keyup', function(e) {
      if (e.keyCode !== 27) {
        return false;
      }
    });
    $(document).on('click keyup', Popover._removeTrigger);
    opts.eventing.forEach(function(desc, i) {
      return $("#" + div.id + " " + desc.selector).on(desc.event, function(e) {
        if (desc.filter(e)) {
          _this.restoreRange();
          _this.remove();
          return desc.handler(e);
        }
      });
    });
  }

  Popover.prototype.remove = function() {
    this.div.parentNode.removeChild(this.div);
    Popover._current = null;
    return $(document).off('click keyup', Popover._removeTrigger);
  };

  Popover.prototype.contains = function(node) {
    return this.div.contains(node);
  };

  Popover.prototype.restoreRange = function() {
    var sel;
    sel = window.getSelection();
    sel.removeAllRanges();
    return sel.addRange(this.range);
  };

  Popover.prototype._getSelectionCoords = function() {
    var range, rect, sel, x, y, _ref, _ref1;
    sel = document.selection;
    if ((sel != null) && sel.type !== 'Control') {
      range = sel.createRange();
      rect = range.getClientRects()[0];
      _ref = [range.boundingLeft + (rect.width / 2), range.boundingTop], x = _ref[0], y = _ref[1];
    } else if (window.getSelection != null) {
      sel = window.getSelection();
      if (sel.rangeCount != null) {
        range = sel.getRangeAt(0).cloneRange();
        if (range.getClientRects != null) {
          rect = range.getClientRects()[0];
          _ref1 = [rect.left + (rect.width / 2), rect.top], x = _ref1[0], y = _ref1[1];
        }
      }
    }
    this.range = range;
    return {
      x: x,
      y: y
    };
  };

  return Popover;

})();
